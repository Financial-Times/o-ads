<span class="o-registry-demo-chunk">

<!-- These are all supporting script for videojs player & ima plugin
see:
http://www.videojs.com/
https://github.com/googleads/videojs-ima
-->
<link href="//vjs.zencdn.net/4.5/video-js.css" rel="stylesheet">
<link rel="stylesheet" href="/bundles/css?modules=o-ads:/demos/src/videojs.ads.css"/>
<link rel="stylesheet" href="/bundles/css?modules=o-ads:/demos/src/videojs.ima.css"/>
<script src="//vjs.zencdn.net/4.5/video.js"></script>
<script src="//imasdk.googleapis.com/js/sdkloader/ima3.js"></script>
<script src="/bundles/js?modules=o-ads:/demos/src/videojs.ads.js"></script>
<script src="/bundles/js?modules=o-ads:/demos/src/videojs.ima.js"></script>

<!-- include the o-ads origami module - can use require instead -->
<script src="/bundles/js?modules=o-ads"></script>

<!-- define your video player -->
<video id="content_video" class="video-js vjs-default-skin"
       controls preload="auto" width="640"
       height="360">
    <source src="src/BucksBunnyShort.mp4" type="video/mp4"></source>
</video>

<div id="credits"> Sample video credits (c) copyright 2008, Blender Foundation / www.bigbuckbunny.org</div>

    <div>
        Companion ad to video master
        <div id="videoCompanion" class="advertising {{classes}}" {{{o-ads-data-attr}}}>
        </div>
    </div>

    <script>
    // initialise the configuration for o-ads
    var ads = Origami["o-ads"].init({
        dfp_site: 'ftcom.5887.video',
        dfp_zone: 'video'
        formats: {
            videoCompanion: {
                sizes: [[728,90]],
                outOfPage: true
            }
        }
    });

    // enable video mode - setting this mode will automatically register all other positions (unless specifically excluded)
    // to be companions to the video (pre-roll, mid-roll, post-roll) advert this will delay requesting the companion until
    // the video ad is loaded (to syncronise the ads)
    ads.config('companions',true);
    ads.config('video',true);

    ads.slots.initSlot('videoCompanion');

    var player = videojs('content_video');

    //use buildURLForVideo to get a adserver url which will return a VAST response
    var options = {
      id: 'content_video',
      adTagUrl: ads.buildURLForVideo('video','','').fullURL
    };

    // setup the player options in the ima (google interactive media ads) videojs module
    player.ima(options);

    // Remove controls from the player on iPad to stop native controls from stealing
    // our click
    var contentPlayer =  document.getElementById('content_video_html5_api');
    if (navigator.userAgent.match(/iPad/i) != null &&
        contentPlayer.hasAttribute('controls')) {
        contentPlayer.removeAttribute('controls');
    }

    // Initialize the ad container when the video player is clicked, but only the
    // first time it's clicked.
    var clickedOnce = false;
    player.on('click', function() {
        if (!clickedOnce) {
            player.ima.initializeAdDisplayContainer();
            player.ima.requestAds();
            player.play();
            clickedOnce = true;
        }
    });
    </script>
</span>