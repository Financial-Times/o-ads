<script data-o-ads-config type="application/json">
	{
		"gpt": {
			"network": {{network}},
			"site": "{{site}}",
			"zone": "{{zone}}"
		},
		"lazyLoad": {
			"viewportMargin": "{{viewportMargin}}"
		}
	}
</script>
<script>
	const adObserver = new IntersectionObserver(
		(entries, observer) => {
			console.log('entries size', entries.length)

			entries.forEach((entry) => {
				const slotName = entry.target.getAttribute('data-o-ads-name')
				
				if (entry.isIntersecting) {
					console.log('entering', slotName)
					initSlot(oAds)(entry.target)
				} else {
					console.log('leaving', slotName)
					oAds.slots.destroy(slotName)
				}
			})
		},
		{ root: null, rootMargin: '0px', threshold: 0 }
	)
</script>
<script>
	const initSlot = (oAds) => oAds.slots.initSlot.bind(oAds.slots)

	// Create and add fake content
	const addFakeContent = (text) => (parent) => {
		const h2 = document.createElement("h2")
		const textNode = document.createTextNode(text)
		h2.appendChild(textNode)
		parent.appendChild(h2)
	}

	// Create and add an Ad Slot
	const createAdSlotContainer = (formats) => {
		const adSlot = document.createElement('div')
		adSlot.setAttribute('data-o-ads-formats', formats)
		return adSlot
	}

	const addAdSlot = (formats) => (parentDoc) => {
		const adSlot = createAdSlotContainer(formats)
		parentDoc.appendChild(adSlot)
		initSlot(oAds)(adSlot)
		return adSlot
	}

	const moreContent = () => {
		const parentNode = document.querySelector(`div[id=contentArea]`)

		// Add some dynamic fake content
		addFakeContent('Dynamic Fake Content 1')(parentNode)
		addFakeContent('Dynamic Fake Content 2')(parentNode)

		// Create and add the Ad Slot itself
		const adSlot = addAdSlot('{{formats}}')(parentNode)
		adObserver.observe(adSlot)
	}
</script>

<body style='height: 100%'>
	<div id='contentArea' style='height: 100%' />

	<!-- Button to load more content dynamically. -->
	<button onclick="moreContent()">More Content</button>
</body>
